apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def assetsDir = '/sdcard/diff_patch_test'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.zyhang.diffpatchtest"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        buildConfigField("String", "ASSETS_DIR", "\"${assetsDir}/assets\"")

        ndk {
            abiFilters 'arm64-v8a'
//            abiFilters 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(':bsdiff')
    implementation project(':archive-patcher')
    implementation project(':apkdiff')

    implementation 'com.leon:lfilepickerlibrary:1.8.0'
    implementation 'com.blankj:utilcodex:1.29.0'

    implementation 'com.mcxiaoke.gradle:packer-helper:1.0.7'
}

task syncAssets() {
//    afterEvaluate {
//        tasks.findByName('assembleDebug').dependsOn('syncAssets')
//    }
    doLast {
        println "adb-sync assets $assetsDir"
        exec {
            commandLine '../adb-sync/adb-sync', /*'--delete',*/ 'assets', assetsDir
        }
    }
}
